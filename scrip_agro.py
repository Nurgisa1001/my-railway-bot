from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import time
import requests
import threading

# –¢–µ–ª–µ–≥—Ä–∞–º —Ç–æ–∫–µ–Ω –∏ —á–∞—Ç ID
TELEGRAM_BOT_TOKEN = "7658322222:AAFlDM4KZtHUvMUPsFVPOPTEjwN3y8BExSA"
CHAT_ID = "533627179"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
options = Options()
# options.add_argument("--headless")  # –£–±—Ä–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
options.add_argument("--disable-gpu")
options.add_argument("--no-sandbox")
options.add_argument("--disable-dev-shm-usage")

found_button = False  # –§–ª–∞–≥ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å–ª–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
vacancy_links = []  # –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π

def send_telegram_message(message):
    print("üì© –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram...")
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": message}
    requests.post(url, data=data)
    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

def update_vacancy_links():
    global vacancy_links
    while not found_button:
        driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
        print("üîπ –û–±–Ω–æ–≤–ª—è—é —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π...")
        driver.get("https://agropraktika.eu/vacancies")
        time.sleep(1)
        
        vacancies = driver.find_elements(By.CLASS_NAME, "vacancy-item")
        new_links = [vacancy.find_element(By.TAG_NAME, "a").get_attribute("href") for vacancy in vacancies]
        
        if new_links != vacancy_links:
            vacancy_links = new_links
            print("üîπ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π:")
            for link in vacancy_links:
                print(link)
        
        driver.quit()
        time.sleep(0.5)  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–ø–∏—Å–∫–∞

def check_vacancy_button(link):
    global found_button
    while not found_button:
        driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
        print(f"üîπ –û—Ç–∫—Ä—ã–≤–∞—é –≤–∞–∫–∞–Ω—Å–∏—é: {link}")
        driver.get(link)
        time.sleep(1)
        
        try:
            print("üîπ –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É'...")
            button_block = driver.find_element(By.XPATH, "/html/body/main/div/div/div[3]/div[2]")
            buttons = button_block.find_elements(By.TAG_NAME, "button") + button_block.find_elements(By.TAG_NAME, "a")
            
            for button in buttons:
                if "–ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É" in button.text.lower():
                    print(f"‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ {link}! –ù–∞–∂–∏–º–∞—é...")
                    button.click()
                    send_telegram_message(f"‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –∏ –Ω–∞–∂–∞—Ç–∞ –Ω–∞ {link}!")
                    found_button = True
                    driver.quit()
                    return
            else:
                print(f"‚ùå –ö–Ω–æ–ø–∫–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ {link}, –ø—Ä–æ–≤–µ—Ä—è—é —Å–Ω–æ–≤–∞...")
        except:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {link}")
        
        driver.quit()
        time.sleep(0.1)  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π

def check_all_vacancies():
    while not found_button:
        if not vacancy_links:
            time.sleep(0.1)
            continue
        
        threads = []
        for link in vacancy_links:
            thread = threading.Thread(target=check_vacancy_button, args=(link,))
            threads.append(thread)
            thread.start()
        
        for thread in threads:
            thread.join()
        
        time.sleep(0.1)  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ü–∏–∫–ª–æ–º

if __name__ == "__main__":
    threading.Thread(target=update_vacancy_links, daemon=True).start()  # –§–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π
    check_all_vacancies()
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∫–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞!")
